<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0325.1233                               -->
<workbook original-version='18.1' source-build='2021.4.5 (20214.22.0325.1233)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Canes.csv (Multiple Connections)' inline='true' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='0-load_strong_winds' name='textscan.1a0ui8w1kfmg1710ffu7r1vcfggw'>
            <connection class='textscan' directory='/Users/brentcleland/NSS/Projects/Capstone/StrongWinds/data' filename='0-load_strong_winds.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Canes' name='textscan.080o0gk0h4jidy1f6xrsu1d0x88g'>
            <connection class='textscan' directory='/Users/brentcleland/NSS/Projects/Capstone/StrongWinds/notebook' filename='Canes.csv' password='' server='' />
          </named-connection>
          <named-connection caption='AL012021_pts' name='ogrdirect.0c8flup10b37oq16m30js0jkr429'>
            <connection class='ogrdirect' directory='/Users/brentcleland/Downloads/al012021_best_track' filename='AL012021_pts.shp' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.080o0gk0h4jidy1f6xrsu1d0x88g' name='Canes.csv' table='[Canes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Index' ordinal='0' />
            <column datatype='integer' name='Category' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='integer' name='Winds(MPH)' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
            <column datatype='real' name='Actual Dollars ' ordinal='5' />
            <column datatype='string' name='Landfall' ordinal='6' />
            <column datatype='string' name='Month' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='DateImpact' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.080o0gk0h4jidy1f6xrsu1d0x88g' name='Canes.csv' table='[Canes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Index' ordinal='0' />
            <column datatype='integer' name='Category' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='integer' name='Winds(MPH)' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
            <column datatype='real' name='Actual Dollars ' ordinal='5' />
            <column datatype='string' name='Landfall' ordinal='6' />
            <column datatype='string' name='Month' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='DateImpact' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Index]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winds(MPH)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Winds(MPH)]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Winds(MPH)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual Dollars </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual Dollars ]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Actual Dollars </remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Landfall</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Landfall]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Landfall</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateImpact</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DateImpact]</local-name>
            <parent-name>[Canes.csv]</parent-name>
            <remote-alias>DateImpact</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actual Dollars' datatype='real' name='[Actual Dollars ]' role='measure' type='quantitative' />
      <column caption='Date Impact' datatype='string' name='[DateImpact]' role='dimension' type='nominal' />
      <column datatype='string' name='[Landfall]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Conneticut&quot;' value='&quot;Connecticut&quot;' />
          <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Canes.csv' datatype='table' name='[__tableau_internal_object_id__].[Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Canes.csv' id='Canes.csv_C5CB4DBF5B8F4357A3867F86F2695490'>
            <properties context=''>
              <relation connection='textscan.080o0gk0h4jidy1f6xrsu1d0x88g' name='Canes.csv' table='[Canes#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Index' ordinal='0' />
                  <column datatype='integer' name='Category' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='integer' name='Winds(MPH)' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='real' name='Actual Dollars ' ordinal='5' />
                  <column datatype='string' name='Landfall' ordinal='6' />
                  <column datatype='string' name='Month' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='string' name='DateImpact' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[sum:Deaths:qk]</rows>
        <cols>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{14AF2151-5CB4-4534-8AE0-47A81DF72309}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column datatype='integer' name='[Category]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Index]' role='measure' type='quantitative' />
            <column datatype='string' name='[Landfall]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Conneticut&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='Attribute' name='[attr:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Index]' derivation='Count' name='[cnt:Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Landfall]' derivation='None' name='[none:Landfall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Landfall:nk]' />
              <groupfilter function='member' level='[none:Landfall:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Month:nk]' />
              <groupfilter function='member' level='[none:Month:nk]' member='&quot;0&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Name:nk]' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Unnamed&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[attr:Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Index:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</column>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]</column>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' num-steps='5' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk] / [federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[attr:Name:nk])</rows>
        <cols>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Index:qk]</cols>
      </table>
      <simple-id uuid='{84B44341-2CA4-4651-97E2-26799DFC1625}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column datatype='string' name='[Landfall]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Conneticut&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Winds(MPH)]' role='measure' type='quantitative' />
            <column-instance column='[Landfall]' derivation='None' name='[none:Landfall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Winds(MPH)]' derivation='Sum' name='[sum:Winds(MPH):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Landfall:nk]' />
              <groupfilter function='member' level='[none:Landfall:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>(([federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk] / [federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]) * [federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[sum:Winds(MPH):qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{63DB713E-9881-41C2-A47F-4B968063C301}' />
    </worksheet>
    <worksheet name='State by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column datatype='integer' name='[Category]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Index]' role='measure' type='quantitative' />
            <column datatype='string' name='[Landfall]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Conneticut&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column-instance column='[Index]' derivation='Count' name='[cnt:Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Landfall]' derivation='None' name='[none:Landfall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Landfall:nk]' />
              <groupfilter function='member' level='[none:Landfall:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Month:nk]' />
              <groupfilter function='member' level='[none:Month:nk]' member='&quot;0&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Index:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]' direction='DESC' measure-to-sort-by='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Index:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</column>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' palette='tableau-map-temperatur' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk] / [federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk])</rows>
        <cols>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Index:qk]</cols>
      </table>
      <simple-id uuid='{19017B21-F894-4930-BF4E-F87918CC58FC}' />
    </worksheet>
    <worksheet name='Wind by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column datatype='integer' name='[Category]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Index]' role='measure' type='quantitative' />
            <column datatype='string' name='[Landfall]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Conneticut&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column-instance column='[Index]' derivation='Count' name='[cnt:Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Landfall]' derivation='None' name='[none:Landfall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;Conneticut&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Deleware&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Month:nk]' />
              <groupfilter function='member' level='[none:Month:nk]' member='&quot;0&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' palette='tableau-map-temperatur' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk] / [federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk])</rows>
        <cols>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Index:qk]</cols>
      </table>
      <simple-id uuid='{FD06C4AD-DB58-4A16-81B3-03742B90CD91}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column datatype='integer' name='[Category]' role='measure' type='quantitative' />
            <column datatype='string' name='[Landfall]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Conneticut&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Landfall]' derivation='None' name='[none:Landfall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]'>
            <groupfilter from='&quot;August&quot;' function='range' level='[none:Month:nk]' to='&quot;September&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[Longitude (generated)]' field-type='quantitative' max='-5563098.4515303485' min='-13520812.420614609' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[Latitude (generated)]' field-type='quantitative' max='6712709.105125092' min='2083624.1434298723' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='light-admin-1-label-9th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-8th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-7th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-6th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-1st-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-3rd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-2nd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-1st-tier' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]' />
              <lod column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]' />
              <lod column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Name:qk]' />
              <geometry column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[Latitude (generated)]</rows>
        <cols>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DFE8DC79-7881-498A-9830-EEC6946FDAD6}' />
    </worksheet>
    <worksheet name='storm count by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column datatype='integer' name='[Category]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Index]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Index]' derivation='Sum' name='[sum:Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]' num-steps='5' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]' />
              <lod column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Name:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1236' />
                <format attr='maxwidth' value='1236' />
                <format attr='minheight' value='692' />
                <format attr='maxheight' value='692' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[sum:Index:qk]</rows>
        <cols>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{B44FE88D-0C5F-4981-9682-E273A126D47C}' />
    </worksheet>
    <worksheet name='storm count by year (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Canes.csv (Multiple Connections)' name='federated.1cmoqgg13zfu9g18fkhhq1cxo28f' />
          </datasources>
          <datasource-dependencies datasource='federated.1cmoqgg13zfu9g18fkhhq1cxo28f'>
            <column caption='Actual Dollars' datatype='real' name='[Actual Dollars ]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Index]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Actual Dollars ]' derivation='Sum' name='[sum:Actual Dollars :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Index]' derivation='Sum' name='[sum:Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[sum:Actual Dollars :qk]' />
              <lod column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Name:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1236' />
                <format attr='maxwidth' value='1236' />
                <format attr='minheight' value='692' />
                <format attr='maxheight' value='692' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[sum:Index:qk]</rows>
        <cols>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{4FC63B38-6D31-4F38-8599-F5B9C09C3FBB}' />
    </worksheet>
  </worksheets>
  <windows film-mode='true' source-height='30'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DF8181B-B866-472C-A450-0621FABD75FC}' />
    </window>
    <window class='worksheet' name='Wind by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC8BA87F-3B12-48FA-B247-C7FFF564D8CC}' />
    </window>
    <window class='worksheet' maximized='true' name='State by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A15D269-A4C0-4D76-854B-DDB9DDDEDB5E}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[attr:Name:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[ctd:Category:ok]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Category:qk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B5D69D8F-DABD-42BB-A1E6-5F1FB9659FA9}' />
    </window>
    <window class='worksheet' name='storm count by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[cnt:Category:qk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51E90DCB-1420-49E5-B132-AD26E5907EFF}' />
    </window>
    <window class='worksheet' name='storm count by year (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[sum:Actual Dollars :qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[sum:Actual Dollars :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADB1A477-FBC5-4CC5-A078-951859DE134F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Month:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{077E189F-887E-4203-AF4C-410AC461E4BC}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[:Measure Names]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Landfall:nk]</field>
            <field>[federated.1cmoqgg13zfu9g18fkhhq1cxo28f].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{781F1E47-987E-4636-A241-E69DC4505CCD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dSWwjWZrf/7FzC+7aSUmlTKUys3rSuXS6stI1zuxutI3BDOCD7YMxN9uA
      D4Z9Mgz7ZMCAD30Zu4GxB7DhORjd8Axq7MO03a529cDuqpnO6qrq6srJpVJKbSlqIcWdwSBj
      Dx+yGU5lUJUUGWRI1PtdJD0G33tBxcf3vu99C2Xbtg0C4ZxC+z0BAsFPxk4Ams2m31MgnCHG
      TgBM0/R7CoQzxNgJAIFwEogAEM41RAAI5xq284uiKLAsy8+5eIKqqmi1Wn5Pg3BGcASAZVnY
      to1XjwUoigIA2Lbt/H7asWQJ1Y3HnvcbjNkIil3GsyzQ9JsXUhMUPm0mB5rDcWP9xuwC4qHI
      QH13wzAMsCz75gs9wLZtWJYFhmFGOtYRAQCAXC4HwzAAAPF4HDRNY3t7G0tLS1BVFYFAALIs
      w7ZtiKIISZKQSCQgCMKJJ2IYBp4/f44LFy6A53lPbk4p7CL3w9/3pK9XmbliYeZy9zPDXtZN
      xaLx77duezupX/OvfvvvYSKW8LxfiqJGJgCWZcG27ZEJgGmaYFkWrrsrFAqwLAuJRALVahX7
      +/uIx+PY3NxEMBhEpVJBMBgEANRqNei6jnw+j+vXr/c1kXq9TkyXBN84IgCmaSKdTgMAaJqG
      LMuIx+OwbRuRSATtdhvxeByiKIKiKOi6Dk3TEI1G+xqc4zjcuXNn8LsgEPrkiAAwDIPFxUWf
      puINjBBAcDrjeb98wgYV6t9IwNgMMvHUQHOwAXTTxATWm+3jeYQaN2e4er2OWCw2svFGqSiO
      cqxRj3dqdIBR86qFqTMxiqL6/iB2S1v4o59/4Gr/h3/zn4Ghfb9dwinD1yfCsix8+umnWF5e
      Rr1ex+TkJF68eAGO4/DWW29B0zSEw+ET9dnWWnhRXHe1j9lCR/AIX0+CKYrC5OQkSqUSJEnC
      1tYWLMuCZVn47LPPyENLGDq+rwC6rkMQBOi67pw7BAIBVKvVE3/7Ewgn5VQqwR3zaj8CsLO/
      hb3Glqv9nUv3ezqxPSlECfaGc6sEd4PjOHAc19d7xWAQNxMLrvaz4spBGC2+C8DGxgZEUQTL
      skgmB/OVAQBF/grlF99ztV+49iOA6k+oCOOL7wKQz+cRj8dRKBSwvb2NcDgMWZYxMTGBSqWC
      +fl5JBLe+7kQCMApiAcIBALgeR6apqFSqUBRFMzOziKfz6Ner5MYX8JQ8X0FWFh4uV+/cuUK
      MpkMAoEABEFAPB6HJEmIx+M+z5AwzjhWoGazORZema1WC6FQaGTjmaY5EsvFqMca9XidWJRh
      WOq60YmtcJlBTdOEZVlfa4XpvOX1AIZO+0ksLl4H21T3HyNU/789XUvH3wY3862BxiNmUG84
      FWZQ27bx+PFjzMzMoNlsQhRFlMtlJJNJlEolTE5O4vDwEKIo4vDwENPT0wBeuk5Ho1GUSiUU
      i0XcunWrp4da0zR89NFHuHv3rmff2rZahrH/YU/XsgAwoAAQzjau9Ybnecebslwug6Io1Ot1
      MAyDXC6HYrEIWZaRSqXQarUgSRICgQAajQaazSYmJiZ6H5ymcfny5b5t/gTCoBxZASiKQiwW
      w+HhIWzbRjKZPPJw2raNQqGA6elpVKtVpFIpyLIMXdcdZ7ZGo9H74CyLTMZ7330CoVdOpSvE
      IFT3nyAk/XlP1zKxy2Cn7w00HtEBvOFU6ADjAB2eAz/9990vUCxxhyC48F0AJEmCZVldo7ia
      zSYikZOl+2hJv0Jxi7hCEHrDVwGwbRvb29u4ePEivvrqK4iiiEqlAlEUYZombNvG8vKyn1Mk
      jDm+CwBN02AYBoqioF6vY3Z2Fq1WCzRNk4AYwtDxVQBomkY6nUalUkEsFoMoihBFEc1mE7qu
      QxS7pGIjEDxk/KxA1QLCQdXVzgnZoSjBxArkDcQK5BGNtownBxuu9ruXM8QKRHDhuwA8evQI
      kUgE2ezLb+j9/X3Mzs72/U1QrOfx48//2NV+Z+U+aP+9vwmnDN8FoFgsQpIkVKtV8DyPZrOJ
      crncV65RAuGk+C4AwWDQSbZLURQ4jkMgEPB5VoTzgu8C8O677wJ4qQRRFDWwe3RICGNpesXV
      Tvb/hG6QgJgBIQEx3nCqAmI6F7zqCdp5g6ZpnhWzsG3bMbV59Q2d++IT5P/0v3jSV28cl7PZ
      e8RJC/PXR2i1Ht2twaKAUkwbyXCWTeG/rU4BVJct0Oeff45MJgPDMKAoCqamplAsFhEMBsHz
      PDY2Npw43tnZ2YEmoqoqPvjgA3znO9/x7NDL1FQopbwnfZ02BM6G3T77ddy6YVM2jKA2krEs
      G6g0X640rvXGMAyYpuk4om1tbcEwDLTbbZRKJaRSKUiShN3d3YEnIggCvvvd75IUiATfcK0A
      ly9fRiwWgyRJyOfzyGQyEAQBhmGg0Wg4W6CTRH4dB0VR5OEn+IqjA+i6PhZlUiv7u7APB1+d
      eqXXKpFewAgmxPToDvNGeW82bLRZcyTj2TawVRNA0/T/XwE6acnPOjZFAQPEGJsUjd1I7/rI
      1aks+BHFNJumCWqEViCMcjzbRnCEVqDLYfNomdROmdNCoQBZlrG4uHjsZGRZRiAQGNhEZhgG
      crkcMpmMZ4HxhXwOuR98v+/3yyyL/3S191Po//y7/9Q5yBs2xBnOG742LUqlUgHHcVhdXYUk
      SYhEIjBNE4qiIBQKodVqIRqNIp1OY3V1FTdv3uz75NayLOzs7GB6eppkhiD4gku8VVWFqqqQ
      ZRkcx0HXdSdbBMuyUBQFiqLg8PAQsiw7xbP7ged53Ls3WFA6gTAIrrQo3/jGNxxLj67rYBjG
      ORRrtVqo1+tYXl6GIAhYWFgY2fLfKzTLgRP7zycqsCziwd4tUzRxsTjTEFeIASGuEN5walwh
      uvFqzk+vc3l6bWrbe/Ilah//2LP+3sTCN02w3GhWAS8++3rYgEn35k7xZ3tZ7MrRgcY7CSP0
      vHA+S5cOsLm5icXFRezs7GBychIsy0KSJOcnz/POtqgjsZ0t0kkLWWiahg8//BD379/37EBM
      l+qoPP7ck756IbNggjpDhdpbhgaT6U0AVg+a+Ko2WHX7045LAHRdx+HhIYLBID799FNcuXIF
      hUIBHMfBtm2nftfu7i7i8Tg4jgPDMCiVSrhz586JBmcYBnfu3HFMsATCqHHtPXRdh67rKBaL
      yGazTgmjRCLhZGowDAOJRALpdBqxWMz5+6QwDINUKjVS2zaB8CpjlxWisLEGde3LkY03ccEE
      w41WcRuEVsCE1eNG+1elFCraaHy1bNsGbICiR6MFuJTgcbECyVINIU53tVOBNIahYhErkDf4
      ZQVy9h6dHJzFYhHpdBqlUgkTExOwbdspljEMyuWyc7r8an5QRVFA0/SJg2/MypfgVn/P1R76
      1p+Aor0/bSZ5gbzhVLhCAMAXX3yBGzdu4Pnz55AkCTRNQxAEPHv2DNPT0yiVSpiamho4GAZ4
      edMHBwdIp9M4PDxEsViEZVlQVRWRSASiKGJ7exs3btwY6Tcf4fzgWm8ymQweP36MZDKJSqWC
      SqWCZrOJeDyOdruNQqEATfMmcoeiKFiWhUKhANu2oes6DMMAx3EIhULI5/OQJMmz8QiE13Gt
      AEtLS8hms+A4DrVaDaFQ6Mg2RBTFE6csPw6KopDNZqEoCuLxOBRFgW3bCAaDYBgGkUgE0WjU
      sxhkAuF1xk8JbjYQEtyKFMV5I7SvQ5RgbzjVrhDHYdu2q1Sq32zk1vD88C/7fr/ABfCta7/T
      8/VECfaGU6MEf/DBB3jvvffw+eefY2lpCeFwGI1GA/F4HJVKBYlEwgmYbzQaODw8dK7TNM0J
      nC+VSpBlGZFIBLVazcn9+Wossa7r+OSTT/DNb37TM6/SarOEj5580Pf7I4HoiQSAcLZxCcDE
      xASePHmCVCqFZrOJw8NDMAwD0zSPlEtNp9PIZrMAgO3tbWQyGVQqFUdRZlkWPM87iW5rtZor
      mJ6iqIES4RIIg+ISgIWFBTQaDadcUTqddiwzgiCAYRik02lEo1HUajUkEgkIguCUNuq8rigK
      EomEY8UJh8MwDOPo4CyLCxcujOxmCYTXcQlAOp1GOp0GgJ5Tn8RiMczMzBz7+uTkZJ/TOzli
      MIZri3+17/cH+NMV4EMYLmPnC1Sv17tWnBwWRAn2hlOjBI+aRqOBQCDgma3frP4l5F/9vqs9
      9Nd/MBRXCMLZxncBWFtbA8/zSCaTUFUVpmmC53kYhgGapp1sER2F+43YFmAqQ5wxYZzwvWaQ
      KIpOtJlhGKAoCrr+0puzk6O0UCj4PEvCuOL7CkBRFCYnJx0nuGj0aAxqvV53tREIXuEowe12
      eyxSI0q1AkIou9qZ2BVgCClMiCuEN4zSFeJVDwZnBeB5fiwqs0uaDWm/1uWVB66WQAQIJ3u7
      5xdqGDnNbSI1LQvMa/+0STGBqzM96iwnYJytQKN2q+kIt3N3nYE//vhj3L59Gw8fPsSFCxdg
      WRbC4TBqtRo4jkMkEoEsy6AoCoIgQFVVtFotTE9PI5/PI5VKQdd1xONvTk5lGAZWV1dx8eJF
      zwLjlcIucv/1D3q6NrVgYeFmbwLwSSWDP63O9XTtb158G9eyb/V07UkZdfz0KM2gNE2PzAwK
      oLsZtJMXNBAIoFqtolwuI51OQ5Ikp41lWVQqFWSzWVQqFbAsi42NDViWhWq1imQy2ZMA2LaN
      Vqs1FisP4Wzi2nDNz8+Doiik02mEw2Ekk0lHOjvmylarhVQqBVmWEQwGUSqVEIvFUC6XkUgk
      enZs4zgOt2/fJmVRCb7hWgFmZ2ffGO74qouEYRiYmppCIBBANBr1LFimX5hAEOG5xZ6uDUza
      oCO9Kf5JcwqLlNulw4YN6rVg+4kIsVqdFYgrxIAQVwhvOLeuEF6TK23ih3/+P13t/+i3/gUY
      euxulzAgvj4RlmVhbW0NiqIgHA4jEAig0WggmUyCYZi+vEgVrY3d8rarfcwWOoJH+OoKQdM0
      TNPE5OQkCoUC6vW6E0Owvb3t59QI5wRfBUDTNMfvJx6PI5PJoNlsgqZpJJNJP6dGOCeMnRK8
      c7CNgrTjar+1/B5oynt5J0qwNxAl2CNEgcdkdMrVTgoZEbrhuwCsr68jGo2CZVlPtj1KaxXl
      ne+52i9c+xEwhBWAcLbxXQAODg4Qi8VQKBSwtbXllGKdmJhAtVrF/Px8X7UHCIRe8P0rMRQK
      IRAIQNM0lMtlaJqGubk5FAoFJy8pgTAsfF8BlpaWQNM0rly5goWFBfA8D57nkUgkIMtyH2nZ
      KYDy/bYIZ4Sxyw1KyqSezfFOTYEMr3jdunpcec/Oda/f/KulWU+C1dxBYPfPXO38lX8Civb+
      n0nMoN5wasygDx48wOLiIkzThCzLSKfTaLVaCIfDSCQSzgltOByGLMuOT380GnUqzHcyyRUK
      BSwtLcE0TVSrVQQCAdA0jUwm40xkY2MDmUwGBwcH4HneWYVomkY4HMb+/j6uXr3asyDYWgVG
      /v+42vkr/xgAScFIOIpLABKJBFZXV2HbNmKxGBRFQaPRQCKRQCKRwM7ODnied9wX0uk0eJ6H
      qqqwbRuyLDsB7tlsFvv7+05fL168QCwWw9zcnFN0W1VVPHr0CLFYDKqqAgBUVcXU1BRKpRLK
      5TIURfEseS6B8CouAZiamjqSqiSRSICiKKdKy7Vr1wC83GtPTU0hlUo5VbfX1taQyWSclaCT
      KxR4uWLQNA2Kopxvc5qmEY1GEQgEnEAby7IwPT0NnudB0zR0XXdyAxEIXuMowaqqDpwVYtR7
      1G5I1X2ELHceISZ1HaRK5Okdb9RKsCso3ouBT0MpI5oCaLhritnlT11tRV3AtjpYHdxutXvT
      kSguThyfLLhfRvmA+DGeF3WQe6Vzb44AdLYZDx48wPLyMliWhWEYEEXRkRaKonBwcADLsiCK
      IkRRhKIoKJfLmJ2dPXFsr2EY2NzcxOLiomfCIyu7sDf/bU/XPm5M4A+LS56M+yq/efFtvJ1Z
      9LxfYgXyhq+1AgWDQayvrztKbada5NTUFC5fvoyDgwNcvHgRxWIRu7u7juJqGAYuXbp04omU
      SqXe834SCB7TtT5AuVxGNBoFRVEIBoOIRCJO3s5sNotoNIq9vT1EIhHMzc2h1Wo5fv0ngeM4
      3L1715MbIRD6wSUAmUwGmUzm2IOoubmXyaE61qCTHlQNHZoHFZzu6dKQmcK0+ub8RV+Hbbsz
      LsaCg+kVhNExdgExJCvE2Rzv1OgAo+brXB76McOprefYK77vap+98G9AESc5wmv4+kTYto2H
      Dx9iZmYGrVYL6XQazWYTHMc5tQFOWkTPNCW0mw+7DUbCwggufE+LEgqFMDExgUePHqFQKCAc
      DoNl2ZHanwnnF1+fss7Zwv7+vlNedX5+HsFgEDRN95Rgl0AYhLFTgsvF52DsR6722MTfAkUR
      d+jTOt65VYK9xqJjMJk7XV4hWyqCG98FYHNzE6IoYmJiArZto16vD7T1eXG4jv/+2R+62v/1
      7/4BWIZ4lRKO4rsA7O/vg+d5FItF8DzvxBisrKz4PTXCOcB3AegEuliWBU3TkEgkxiI2mXA2
      8F0AstksAoEATNMEx3Fot9sIh4krAWE0jF1WCFmWEQi6C+4NqzYACYjxBr+yQpzIDNoJfez8
      DnR3YThJRodX+/SCg9UnkL/8C8/66xCbsdEl5ShsywI1qiAOD8ZqBg1YPXbxtBhEXfOmeueb
      MG0KRT05IudK+9fPHe3eAn3yySeugJh2u41C4WWY4cTEBOLxONbW1hCNRiEIAoLBoLN6dDJA
      iKIIQRCcbxHbtl1JrnRdx8cff4w7d+54lstHrZZw8PEHnvR1hCsWQvrZPzJpxDWYTG/38XQ7
      hZw0mmQEhk1jQ10cyViv4hIAQRCwvr7uBKyvr69jYWEBrVYLFEVhb28PoiiCpmlMT0/jyZMn
      aDQaAABRFGHbNoLBIKrVKlqtFhiGQTAYRC6Xw717946MRVEULl68SILeCb5xbEBMIBCAqqqY
      mJjA9PQ0yuUywuEwOI5zsjXs7u7CNE1Eo1HHka3dbjuhkZ2fkiR1te2zLIv5+fkh3yKBcDzH
      6gCv7+OP+9vp6Nd5fl695ri+hsnBs8dofvGR5/3GZmzEpt0flWXboEcUFOTFWFLIhEX1tgV6
      Ugqjqo4m0YFlUzjUUyMLsOroU2NnBSK5Qc/meKfGCrSxsQFBEBAIBJBOp4+8qVgsOkWyLcuC
      JEmIxWKo1+sIBoOuzA6vXn8c5XLZSaIly/LAZwAfPfkS3/+LH7va/+gf/HNwjPemUOIM5w2n
      xhmuWq06E9rf3wfHcc4HUavVkMvlwPM8VlZW8OLFC7TbbczNzUGSJORyOcRiMbRaLcTjcezu
      7uL+/ftfO5mNjQ2srKzgq6++cgLrU6kUms0mksnkGwWIQBgE13rT8dGPxWIIBoMwDMNJgMvz
      PCqVirNP4zgOzWYTiqIgn8+j2WzCtm2k02lIktRTniDLsqAoCjiOgyAICIfDaDQaUBTFMb0S
      CMPCtQJcu3btiNJqmiYsy3KU3M7Dz7IslpeXkc1mEQwGYVkWDMNwtkFzc3NOPtGvI51OO30m
      k0kEAgFYloVyuUxKIxGGztgFxORLRbQpd47TxeTkUCwMRAfwhlOjA5x1AmYDKe2Z+4Xkb4FE
      xRNex3cBePToEaLR6BvTI/ZqHrNau9A2/6OrnZ37G6RMKsGF7wLQKa7x+PFj6LoOy7KcKjM0
      TUMQBEiShHfeecfvqRLGEN8FoFwuO4U0TNN0Kb7FYnGkhz+E84XvAtBJjnvcSeDi4uKJlFeK
      DYOOXen2yiDTJIwpY2cFIrlBz+Z459YK9HWOcv3UB1Pkp6jtu7NCzK/8B1A0cbsmHMX33KBf
      fPEFMpkMJElCMplEvV53YoTb7TaWl5dP1KdlKdDV3JBmTBg3fM8NGolEkE6nkc/nUSqVkEgk
      oKoqaJp2uVwTCF7jqwAwDANBEJDP58HzPOLxuLMK6LqOaDTq5/QI54CxU4IrpS1wzLarPRK/
      B2oIB2FECfaGc6sEe41mCajq7hKlER/mQjj9+C4Aa2trEEURMzMzsG0blUoFqVSq7/52y9tf
      kxuUuEIQjuK7AOzu7iIUCjm5QcvlMuLxON5++22/p0Y4B/guAKIoOrEGhmGQtIiEkeK7AFy9
      ehUsyzoB2K8G1fQDQzMI8t2C4okrBMENyQoxICQrhDecmqwQsiyDYRhXPK9lWVBV1Ulnrmka
      NE1DJOK2r7TbbTAM09M3eWciXrH/9CFqP/9J3+9nOWD+hjui7Di65TZdVUT873pvxbpPwlvJ
      KfydW+953u9xnDszaKds6dWrV5HL5SCKouOvv76+jnA4jGAwiJWVFayuriKTyWBrawuCIKBW
      qyEUCkFRFLAs6wTUq6qKaDSKVquFpaWlIxPRNA0ffvgh7t+/79neX2vUUP7yk77fzwo25jK9
      C0A3DqUUPjm8OFAf3dB+nTWD4B2ur97Lly/j2bNnYBgG9Xod5XIZkiRhamoK0WgU4XAYmqaB
      YRjnwc7n8zBNE6qqQhAEqKoKWZad6xqNRtcMDwzD4J133oEgjCYDMYHwOq71rV6vY2FhAaqq
      Ip1Oo1arOQ99OByGIAjgOA4TExPY29tDKBRCKpVyMkNUq1VkMhmnP4qiIElS1+1QpzQqgeAX
      Y+cKkV9fhfLsl32/n2GBqeXeP5JuOsyOFsJnzWTfcziOaTGOb13+K573exznQQcYOwGoVMvg
      Au5/WiQQJWlRTvF4p0IJ9oPO9qijLDcajYG8QDfzq6RMKqFnfBeAnZ0dBAIBpzwqRVHI5XKI
      RCJYWFjwe3qEMcdX77CO0lwsFpFOp2EYBgAgn887iXIJhGHie0TY7du3nbpikUgEHMc55w8E
      wrAZO1eIhtQAxbr1ejE4nEwRxBXCG06NK8RZ56UZ9Iu+38+w9sBmUC/4cW0Gbevow2fZFugR
      pncc1nh3L1zBQnLy6FinwQpkmiYePHiAbDYL0zQRi8XAsiwsy0KlUkEymYSiKJiZcUdc9YOu
      6/jss89w48YNx8doUJRSHrkP3u/7/axgI8mdzBViGOvmj7ZvoGaO5zYwm5xwCYBfHBFvhmEw
      PT2NWCyGvb09HB4e4mc/+xlUVUWhUEAul4Msy54NTlEU0uk0SX1I8A2XEhyPxxEOh5FKpRAO
      h3Hz5k0oioJYLIZoNApVVb0bnGVx6dIlz/ojEE5K1zrBwMtAlbMIH40jdf1O3+9nOICZGMwd
      2gtu4S3I1tF/j23ZoOjRBfYMa7x0WPS8z34ZOyWY5AY9m+OdCiXYDzou06/euKIoPRXY68Zm
      /hn+x//6oav9X/7d3wM7hDKphLON70/E2toaIpEIYrEYbNuGLMvY3993XKzL5TKmp6fBMAwS
      icQbTY6mZaKttbq8MlYLHcEjfE+OW61WIcuyUx2mUySj1Wqh3W5D13VUq1U0m82B8gURCN3w
      VQAMw8D169dhGAbq9ToYhnH2gpOTk2BZFnt7eyRohjA0zoQSrGkaOI7rydqSP9yHbDZc7UvT
      l0hu0FM83rlVgnvhJI5xPK0izB10eYWcNxDc+C4ABwcHTjaJUCgEURRhGAY0Tesrv4+qbKNS
      +p6rPRJ7j5RJJbjwXQCKxSI4jgPLsmi1Wtja2kI6nUar1cLu7i5u3LgxUrs+4Xzh61eiruvQ
      NA2yLDu5QU3TBEVRODw8hGVZUBTFzykSxhxfVwCWZXHr1q2ur01PT/flZkDTAXDC11edJxA6
      jF1ADMkNejbH8ysgxlkBIpEILMuCpmkAXt78q+kKVVUFwzBgWRaKooDjOE8+HK8/ZKvxHPzz
      P+npWiZ9G/zi3x5oPGIG9YZTYQalKApbW1ugKArRaBT7+/tgWRaNRgPJZBKWZaHRaCAejyMS
      iWBnZwdXr149cS3fDqqq4ic/+Qm+/e1vd02y29fNGTKs+lc9XUuHM2++iDDWuASgU560454A
      ALFYDLVaDYZhIJvNYm9vD7quo91uo9Vq9W2l4TgO9+7d8ywajEA4Ka71bW5uzvmdoihYloUH
      Dx7g1q1bTtZnnucd5XSQ/TZN08TESfCVN7pCdMyT/W5zRk2tsIGw9qyna+nwPJjkbww0HtEB
      vOFU6ADdoCjqzDz8AGAhDJVyR7OF5xaHErlFONv4fhKcz+eRSCTAsiw0TUOz2QTP8xBFEbqu
      o1QqYXZ2tueHt7G1itwPvu9q/2v/7o9BsWdHkAmjwREAv84BZFlGoVBAMplEsVhEKBRCo9FA
      KpVyagY3Gm7vzuOwGA7RpctdXiHf/qeZTqXQkY97FtyhT8KoY4LJQZg32LYNy7JGpgN0xiLu
      kQMyqpPLUY817uN1xvJdBxgGtVoNgUCg78D6Xmk2m9B1HYlEYqjjAC/rKEQiEZTLZUSj0aEa
      JizLQrvddg5BU6nU0B5O27adaEDbthEKhYZqearX644+adv2eK4AOzs72NraGvo4z549c1K6
      DxPLsvD06VO0Wi0Ui8Wh35skSdja2sL29jaazebQrWe6rmNtbQ25XG7o96brOp4/f+7878ZS
      AEZltr148SI2NjaGPg5N00ilUrAsyylGOExisRh4nsfc3BxqtZqn6TC7kc/nsbKyApZlh26I
      KRQKuHTpEpaXl7GxsTGeW6BwODxQmaVeabVayGaH73qt6zpM04SmaTAMA/Pz80Mdr1qtwrZt
      tNttiKLoWQ3n4wgEAmg0GhBFEcmk98UFXx+rXq8DAObn54kViHC+GcstEIHQK0QACOcaIgCE
      odFqtfDTn/702JP8UqnkBGABQKVSwd7eHtbX149ct7a21rVoYrFYxPvvv4/3338fDx8+7GuO
      Y6kEE04HP//5z3Hz5k1sbm7il7/8JWKxGBYWFlCr1bCxsYFIJIJLly4hGAziF7/4BUKhEN59
      9108ffoUL168wObmJpaWlvD06VNkMhm0Wi2Iooh0Oo27d+8641y/fh3Ly8t9zQEadYAAAACX
      SURBVJEIAGFoTE5O4sGDB475tlgsolqtYnZ2FpcuXYJt2xAEAZIkQRAERCIRzMzM4NGjR7Bt
      G4uLi8jn8wgGg8jn807+qE6mEIqisLKy0vfDDxBfIMIQsW0brVYLgUDA+alpGgRBAPDyAe78
      LcsyQqEQaJo+chZg2zY0TQPP89B1HTzPw7ZtcBznJFMe5NyHCADhXPP/AK6NUVzNlBkpAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='State by Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wind by Month' width='192'>
      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
      4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='storm count by year' width='192'>
      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
      hKf5f60K0Bn8KRCpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='storm count by year (2)' width='192'>
      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
      k7oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
